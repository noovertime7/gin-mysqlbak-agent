// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.13.0
// source: proto/backupAgent/esbak/estask.proto

package esbak

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type EsBakTaskADDInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EsHost      string `protobuf:"bytes,1,opt,name=EsHost,proto3" json:"EsHost,omitempty"`
	EsUser      string `protobuf:"bytes,2,opt,name=EsUser,proto3" json:"EsUser,omitempty"`
	EsPassword  string `protobuf:"bytes,3,opt,name=EsPassword,proto3" json:"EsPassword,omitempty"`
	Index       string `protobuf:"bytes,7,opt,name=Index,proto3" json:"Index,omitempty"`
	BackupCycle string `protobuf:"bytes,4,opt,name=BackupCycle,proto3" json:"BackupCycle,omitempty"`
	KeepNumber  int64  `protobuf:"varint,5,opt,name=KeepNumber,proto3" json:"KeepNumber,omitempty"`
	IsEsBakAll  int64  `protobuf:"varint,6,opt,name=IsEsBakAll,proto3" json:"IsEsBakAll,omitempty"`
}

func (x *EsBakTaskADDInput) Reset() {
	*x = EsBakTaskADDInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_backupAgent_esbak_estask_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EsBakTaskADDInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EsBakTaskADDInput) ProtoMessage() {}

func (x *EsBakTaskADDInput) ProtoReflect() protoreflect.Message {
	mi := &file_proto_backupAgent_esbak_estask_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EsBakTaskADDInput.ProtoReflect.Descriptor instead.
func (*EsBakTaskADDInput) Descriptor() ([]byte, []int) {
	return file_proto_backupAgent_esbak_estask_proto_rawDescGZIP(), []int{0}
}

func (x *EsBakTaskADDInput) GetEsHost() string {
	if x != nil {
		return x.EsHost
	}
	return ""
}

func (x *EsBakTaskADDInput) GetEsUser() string {
	if x != nil {
		return x.EsUser
	}
	return ""
}

func (x *EsBakTaskADDInput) GetEsPassword() string {
	if x != nil {
		return x.EsPassword
	}
	return ""
}

func (x *EsBakTaskADDInput) GetIndex() string {
	if x != nil {
		return x.Index
	}
	return ""
}

func (x *EsBakTaskADDInput) GetBackupCycle() string {
	if x != nil {
		return x.BackupCycle
	}
	return ""
}

func (x *EsBakTaskADDInput) GetKeepNumber() int64 {
	if x != nil {
		return x.KeepNumber
	}
	return 0
}

func (x *EsBakTaskADDInput) GetIsEsBakAll() int64 {
	if x != nil {
		return x.IsEsBakAll
	}
	return 0
}

type EsBakTaskUpdateInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID          int64  `protobuf:"varint,9,opt,name=ID,proto3" json:"ID,omitempty"`
	EsHost      string `protobuf:"bytes,1,opt,name=EsHost,proto3" json:"EsHost,omitempty"`
	EsUser      string `protobuf:"bytes,2,opt,name=EsUser,proto3" json:"EsUser,omitempty"`
	EsPassword  string `protobuf:"bytes,3,opt,name=EsPassword,proto3" json:"EsPassword,omitempty"`
	Index       string `protobuf:"bytes,7,opt,name=Index,proto3" json:"Index,omitempty"`
	BackupCycle string `protobuf:"bytes,4,opt,name=BackupCycle,proto3" json:"BackupCycle,omitempty"`
	KeepNumber  int64  `protobuf:"varint,5,opt,name=KeepNumber,proto3" json:"KeepNumber,omitempty"`
	IsEsBakAll  int64  `protobuf:"varint,6,opt,name=IsEsBakAll,proto3" json:"IsEsBakAll,omitempty"`
}

func (x *EsBakTaskUpdateInput) Reset() {
	*x = EsBakTaskUpdateInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_backupAgent_esbak_estask_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EsBakTaskUpdateInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EsBakTaskUpdateInput) ProtoMessage() {}

func (x *EsBakTaskUpdateInput) ProtoReflect() protoreflect.Message {
	mi := &file_proto_backupAgent_esbak_estask_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EsBakTaskUpdateInput.ProtoReflect.Descriptor instead.
func (*EsBakTaskUpdateInput) Descriptor() ([]byte, []int) {
	return file_proto_backupAgent_esbak_estask_proto_rawDescGZIP(), []int{1}
}

func (x *EsBakTaskUpdateInput) GetID() int64 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *EsBakTaskUpdateInput) GetEsHost() string {
	if x != nil {
		return x.EsHost
	}
	return ""
}

func (x *EsBakTaskUpdateInput) GetEsUser() string {
	if x != nil {
		return x.EsUser
	}
	return ""
}

func (x *EsBakTaskUpdateInput) GetEsPassword() string {
	if x != nil {
		return x.EsPassword
	}
	return ""
}

func (x *EsBakTaskUpdateInput) GetIndex() string {
	if x != nil {
		return x.Index
	}
	return ""
}

func (x *EsBakTaskUpdateInput) GetBackupCycle() string {
	if x != nil {
		return x.BackupCycle
	}
	return ""
}

func (x *EsBakTaskUpdateInput) GetKeepNumber() int64 {
	if x != nil {
		return x.KeepNumber
	}
	return 0
}

func (x *EsBakTaskUpdateInput) GetIsEsBakAll() int64 {
	if x != nil {
		return x.IsEsBakAll
	}
	return 0
}

type EsTaskIDInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID int64 `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
}

func (x *EsTaskIDInput) Reset() {
	*x = EsTaskIDInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_backupAgent_esbak_estask_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EsTaskIDInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EsTaskIDInput) ProtoMessage() {}

func (x *EsTaskIDInput) ProtoReflect() protoreflect.Message {
	mi := &file_proto_backupAgent_esbak_estask_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EsTaskIDInput.ProtoReflect.Descriptor instead.
func (*EsTaskIDInput) Descriptor() ([]byte, []int) {
	return file_proto_backupAgent_esbak_estask_proto_rawDescGZIP(), []int{2}
}

func (x *EsTaskIDInput) GetID() int64 {
	if x != nil {
		return x.ID
	}
	return 0
}

type EsOneMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=Message,proto3" json:"Message,omitempty"`
	OK      bool   `protobuf:"varint,2,opt,name=OK,proto3" json:"OK,omitempty"`
}

func (x *EsOneMessage) Reset() {
	*x = EsOneMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_backupAgent_esbak_estask_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EsOneMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EsOneMessage) ProtoMessage() {}

func (x *EsOneMessage) ProtoReflect() protoreflect.Message {
	mi := &file_proto_backupAgent_esbak_estask_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EsOneMessage.ProtoReflect.Descriptor instead.
func (*EsOneMessage) Descriptor() ([]byte, []int) {
	return file_proto_backupAgent_esbak_estask_proto_rawDescGZIP(), []int{3}
}

func (x *EsOneMessage) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *EsOneMessage) GetOK() bool {
	if x != nil {
		return x.OK
	}
	return false
}

type EsTaskListInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info     string `protobuf:"bytes,1,opt,name=Info,proto3" json:"Info,omitempty"`
	PageNo   int64  `protobuf:"varint,2,opt,name=PageNo,proto3" json:"PageNo,omitempty"`
	PageSize int64  `protobuf:"varint,3,opt,name=PageSize,proto3" json:"PageSize,omitempty"`
}

func (x *EsTaskListInput) Reset() {
	*x = EsTaskListInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_backupAgent_esbak_estask_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EsTaskListInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EsTaskListInput) ProtoMessage() {}

func (x *EsTaskListInput) ProtoReflect() protoreflect.Message {
	mi := &file_proto_backupAgent_esbak_estask_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EsTaskListInput.ProtoReflect.Descriptor instead.
func (*EsTaskListInput) Descriptor() ([]byte, []int) {
	return file_proto_backupAgent_esbak_estask_proto_rawDescGZIP(), []int{4}
}

func (x *EsTaskListInput) GetInfo() string {
	if x != nil {
		return x.Info
	}
	return ""
}

func (x *EsTaskListInput) GetPageNo() int64 {
	if x != nil {
		return x.PageNo
	}
	return 0
}

func (x *EsTaskListInput) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type EsTaskListOutPut struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total                int64                   `protobuf:"varint,1,opt,name=Total,proto3" json:"Total,omitempty"`
	EsTaskListOutPutItem []*EsTaskListOutPutItem `protobuf:"bytes,2,rep,name=esTaskListOutPutItem,proto3" json:"esTaskListOutPutItem,omitempty"`
}

func (x *EsTaskListOutPut) Reset() {
	*x = EsTaskListOutPut{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_backupAgent_esbak_estask_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EsTaskListOutPut) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EsTaskListOutPut) ProtoMessage() {}

func (x *EsTaskListOutPut) ProtoReflect() protoreflect.Message {
	mi := &file_proto_backupAgent_esbak_estask_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EsTaskListOutPut.ProtoReflect.Descriptor instead.
func (*EsTaskListOutPut) Descriptor() ([]byte, []int) {
	return file_proto_backupAgent_esbak_estask_proto_rawDescGZIP(), []int{5}
}

func (x *EsTaskListOutPut) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *EsTaskListOutPut) GetEsTaskListOutPutItem() []*EsTaskListOutPutItem {
	if x != nil {
		return x.EsTaskListOutPutItem
	}
	return nil
}

type EsTaskListOutPutItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID          int64  `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	EsHost      string `protobuf:"bytes,2,opt,name=EsHost,proto3" json:"EsHost,omitempty"`
	Index       string `protobuf:"bytes,3,opt,name=Index,proto3" json:"Index,omitempty"`
	BackupCycle string `protobuf:"bytes,5,opt,name=BackupCycle,proto3" json:"BackupCycle,omitempty"`
	KeepNumber  int64  `protobuf:"varint,6,opt,name=KeepNumber,proto3" json:"KeepNumber,omitempty"`
}

func (x *EsTaskListOutPutItem) Reset() {
	*x = EsTaskListOutPutItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_backupAgent_esbak_estask_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EsTaskListOutPutItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EsTaskListOutPutItem) ProtoMessage() {}

func (x *EsTaskListOutPutItem) ProtoReflect() protoreflect.Message {
	mi := &file_proto_backupAgent_esbak_estask_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EsTaskListOutPutItem.ProtoReflect.Descriptor instead.
func (*EsTaskListOutPutItem) Descriptor() ([]byte, []int) {
	return file_proto_backupAgent_esbak_estask_proto_rawDescGZIP(), []int{6}
}

func (x *EsTaskListOutPutItem) GetID() int64 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *EsTaskListOutPutItem) GetEsHost() string {
	if x != nil {
		return x.EsHost
	}
	return ""
}

func (x *EsTaskListOutPutItem) GetIndex() string {
	if x != nil {
		return x.Index
	}
	return ""
}

func (x *EsTaskListOutPutItem) GetBackupCycle() string {
	if x != nil {
		return x.BackupCycle
	}
	return ""
}

func (x *EsTaskListOutPutItem) GetKeepNumber() int64 {
	if x != nil {
		return x.KeepNumber
	}
	return 0
}

type EsTaskDetailOutPut struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EsTaskInfo *EsTaskInfo `protobuf:"bytes,1,opt,name=esTaskInfo,proto3" json:"esTaskInfo,omitempty"`
}

func (x *EsTaskDetailOutPut) Reset() {
	*x = EsTaskDetailOutPut{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_backupAgent_esbak_estask_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EsTaskDetailOutPut) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EsTaskDetailOutPut) ProtoMessage() {}

func (x *EsTaskDetailOutPut) ProtoReflect() protoreflect.Message {
	mi := &file_proto_backupAgent_esbak_estask_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EsTaskDetailOutPut.ProtoReflect.Descriptor instead.
func (*EsTaskDetailOutPut) Descriptor() ([]byte, []int) {
	return file_proto_backupAgent_esbak_estask_proto_rawDescGZIP(), []int{7}
}

func (x *EsTaskDetailOutPut) GetEsTaskInfo() *EsTaskInfo {
	if x != nil {
		return x.EsTaskInfo
	}
	return nil
}

type EsTaskInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EsHost      string `protobuf:"bytes,1,opt,name=EsHost,proto3" json:"EsHost,omitempty"`
	EsUser      string `protobuf:"bytes,2,opt,name=EsUser,proto3" json:"EsUser,omitempty"`
	EsPassword  string `protobuf:"bytes,3,opt,name=EsPassword,proto3" json:"EsPassword,omitempty"`
	Index       string `protobuf:"bytes,7,opt,name=Index,proto3" json:"Index,omitempty"`
	BackupCycle string `protobuf:"bytes,4,opt,name=BackupCycle,proto3" json:"BackupCycle,omitempty"`
	KeepNumber  int64  `protobuf:"varint,5,opt,name=KeepNumber,proto3" json:"KeepNumber,omitempty"`
	IsEsBakAll  int64  `protobuf:"varint,6,opt,name=IsEsBakAll,proto3" json:"IsEsBakAll,omitempty"`
}

func (x *EsTaskInfo) Reset() {
	*x = EsTaskInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_backupAgent_esbak_estask_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EsTaskInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EsTaskInfo) ProtoMessage() {}

func (x *EsTaskInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_backupAgent_esbak_estask_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EsTaskInfo.ProtoReflect.Descriptor instead.
func (*EsTaskInfo) Descriptor() ([]byte, []int) {
	return file_proto_backupAgent_esbak_estask_proto_rawDescGZIP(), []int{8}
}

func (x *EsTaskInfo) GetEsHost() string {
	if x != nil {
		return x.EsHost
	}
	return ""
}

func (x *EsTaskInfo) GetEsUser() string {
	if x != nil {
		return x.EsUser
	}
	return ""
}

func (x *EsTaskInfo) GetEsPassword() string {
	if x != nil {
		return x.EsPassword
	}
	return ""
}

func (x *EsTaskInfo) GetIndex() string {
	if x != nil {
		return x.Index
	}
	return ""
}

func (x *EsTaskInfo) GetBackupCycle() string {
	if x != nil {
		return x.BackupCycle
	}
	return ""
}

func (x *EsTaskInfo) GetKeepNumber() int64 {
	if x != nil {
		return x.KeepNumber
	}
	return 0
}

func (x *EsTaskInfo) GetIsEsBakAll() int64 {
	if x != nil {
		return x.IsEsBakAll
	}
	return 0
}

var File_proto_backupAgent_esbak_estask_proto protoreflect.FileDescriptor

var file_proto_backupAgent_esbak_estask_proto_rawDesc = []byte{
	0x0a, 0x24, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x62, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x41, 0x67,
	0x65, 0x6e, 0x74, 0x2f, 0x65, 0x73, 0x62, 0x61, 0x6b, 0x2f, 0x65, 0x73, 0x74, 0x61, 0x73, 0x6b,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1c, 0x67, 0x6f, 0x2e, 0x6d, 0x69, 0x63, 0x72, 0x6f,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x62, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x41,
	0x67, 0x65, 0x6e, 0x74, 0x22, 0xdb, 0x01, 0x0a, 0x11, 0x45, 0x73, 0x42, 0x61, 0x6b, 0x54, 0x61,
	0x73, 0x6b, 0x41, 0x44, 0x44, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x45, 0x73,
	0x48, 0x6f, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x45, 0x73, 0x48, 0x6f,
	0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x45, 0x73, 0x55, 0x73, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x45, 0x73, 0x55, 0x73, 0x65, 0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x45, 0x73,
	0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x45, 0x73, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x49, 0x6e,
	0x64, 0x65, 0x78, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x49, 0x6e, 0x64, 0x65, 0x78,
	0x12, 0x20, 0x0a, 0x0b, 0x42, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x43, 0x79, 0x63, 0x6c, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x42, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x43, 0x79, 0x63,
	0x6c, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x4b, 0x65, 0x65, 0x70, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x4b, 0x65, 0x65, 0x70, 0x4e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x49, 0x73, 0x45, 0x73, 0x42, 0x61, 0x6b, 0x41, 0x6c, 0x6c,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x49, 0x73, 0x45, 0x73, 0x42, 0x61, 0x6b, 0x41,
	0x6c, 0x6c, 0x22, 0xee, 0x01, 0x0a, 0x14, 0x45, 0x73, 0x42, 0x61, 0x6b, 0x54, 0x61, 0x73, 0x6b,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x49,
	0x44, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x45,
	0x73, 0x48, 0x6f, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x45, 0x73, 0x48,
	0x6f, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x45, 0x73, 0x55, 0x73, 0x65, 0x72, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x45, 0x73, 0x55, 0x73, 0x65, 0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x45,
	0x73, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x45, 0x73, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x49,
	0x6e, 0x64, 0x65, 0x78, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x49, 0x6e, 0x64, 0x65,
	0x78, 0x12, 0x20, 0x0a, 0x0b, 0x42, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x43, 0x79, 0x63, 0x6c, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x42, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x43, 0x79,
	0x63, 0x6c, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x4b, 0x65, 0x65, 0x70, 0x4e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x4b, 0x65, 0x65, 0x70, 0x4e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x49, 0x73, 0x45, 0x73, 0x42, 0x61, 0x6b, 0x41, 0x6c,
	0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x49, 0x73, 0x45, 0x73, 0x42, 0x61, 0x6b,
	0x41, 0x6c, 0x6c, 0x22, 0x1f, 0x0a, 0x0d, 0x45, 0x73, 0x54, 0x61, 0x73, 0x6b, 0x49, 0x44, 0x49,
	0x6e, 0x70, 0x75, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x02, 0x49, 0x44, 0x22, 0x38, 0x0a, 0x0c, 0x45, 0x73, 0x4f, 0x6e, 0x65, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x0e,
	0x0a, 0x02, 0x4f, 0x4b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x02, 0x4f, 0x4b, 0x22, 0x59,
	0x0a, 0x0f, 0x45, 0x73, 0x54, 0x61, 0x73, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x70, 0x75,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x50, 0x61, 0x67, 0x65, 0x4e, 0x6f, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x50, 0x61, 0x67, 0x65, 0x4e, 0x6f, 0x12, 0x1a, 0x0a,
	0x08, 0x50, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x08, 0x50, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x22, 0x90, 0x01, 0x0a, 0x10, 0x45, 0x73,
	0x54, 0x61, 0x73, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x75, 0x74, 0x50, 0x75, 0x74, 0x12, 0x14,
	0x0a, 0x05, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x54,
	0x6f, 0x74, 0x61, 0x6c, 0x12, 0x66, 0x0a, 0x14, 0x65, 0x73, 0x54, 0x61, 0x73, 0x6b, 0x4c, 0x69,
	0x73, 0x74, 0x4f, 0x75, 0x74, 0x50, 0x75, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x32, 0x2e, 0x67, 0x6f, 0x2e, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x62, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x41, 0x67, 0x65, 0x6e,
	0x74, 0x2e, 0x45, 0x73, 0x54, 0x61, 0x73, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x75, 0x74, 0x50,
	0x75, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x14, 0x65, 0x73, 0x54, 0x61, 0x73, 0x6b, 0x4c, 0x69,
	0x73, 0x74, 0x4f, 0x75, 0x74, 0x50, 0x75, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x22, 0x96, 0x01, 0x0a,
	0x14, 0x45, 0x73, 0x54, 0x61, 0x73, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x75, 0x74, 0x50, 0x75,
	0x74, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x02, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x45, 0x73, 0x48, 0x6f, 0x73, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x45, 0x73, 0x48, 0x6f, 0x73, 0x74, 0x12, 0x14, 0x0a,
	0x05, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x49, 0x6e,
	0x64, 0x65, 0x78, 0x12, 0x20, 0x0a, 0x0b, 0x42, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x43, 0x79, 0x63,
	0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x42, 0x61, 0x63, 0x6b, 0x75, 0x70,
	0x43, 0x79, 0x63, 0x6c, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x4b, 0x65, 0x65, 0x70, 0x4e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x4b, 0x65, 0x65, 0x70, 0x4e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x22, 0x5e, 0x0a, 0x12, 0x45, 0x73, 0x54, 0x61, 0x73, 0x6b, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x4f, 0x75, 0x74, 0x50, 0x75, 0x74, 0x12, 0x48, 0x0a, 0x0a, 0x65,
	0x73, 0x54, 0x61, 0x73, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x28, 0x2e, 0x67, 0x6f, 0x2e, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x62, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x45,
	0x73, 0x54, 0x61, 0x73, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0a, 0x65, 0x73, 0x54, 0x61, 0x73,
	0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0xd4, 0x01, 0x0a, 0x0a, 0x45, 0x73, 0x54, 0x61, 0x73, 0x6b,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x45, 0x73, 0x48, 0x6f, 0x73, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x45, 0x73, 0x48, 0x6f, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06,
	0x45, 0x73, 0x55, 0x73, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x45, 0x73,
	0x55, 0x73, 0x65, 0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x45, 0x73, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f,
	0x72, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x45, 0x73, 0x50, 0x61, 0x73, 0x73,
	0x77, 0x6f, 0x72, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x20, 0x0a, 0x0b, 0x42, 0x61,
	0x63, 0x6b, 0x75, 0x70, 0x43, 0x79, 0x63, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x42, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x43, 0x79, 0x63, 0x6c, 0x65, 0x12, 0x1e, 0x0a, 0x0a,
	0x4b, 0x65, 0x65, 0x70, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0a, 0x4b, 0x65, 0x65, 0x70, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1e, 0x0a, 0x0a,
	0x49, 0x73, 0x45, 0x73, 0x42, 0x61, 0x6b, 0x41, 0x6c, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0a, 0x49, 0x73, 0x45, 0x73, 0x42, 0x61, 0x6b, 0x41, 0x6c, 0x6c, 0x32, 0xb0, 0x04, 0x0a,
	0x09, 0x45, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x68, 0x0a, 0x07, 0x54, 0x61,
	0x73, 0x6b, 0x41, 0x64, 0x64, 0x12, 0x2f, 0x2e, 0x67, 0x6f, 0x2e, 0x6d, 0x69, 0x63, 0x72, 0x6f,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x62, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x41,
	0x67, 0x65, 0x6e, 0x74, 0x2e, 0x45, 0x73, 0x42, 0x61, 0x6b, 0x54, 0x61, 0x73, 0x6b, 0x41, 0x44,
	0x44, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x2a, 0x2e, 0x67, 0x6f, 0x2e, 0x6d, 0x69, 0x63, 0x72,
	0x6f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x62, 0x61, 0x63, 0x6b, 0x75, 0x70,
	0x41, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x45, 0x73, 0x4f, 0x6e, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x22, 0x00, 0x12, 0x67, 0x0a, 0x0a, 0x54, 0x61, 0x73, 0x6b, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x12, 0x2b, 0x2e, 0x67, 0x6f, 0x2e, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x62, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x41, 0x67, 0x65, 0x6e,
	0x74, 0x2e, 0x45, 0x73, 0x54, 0x61, 0x73, 0x6b, 0x49, 0x44, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a,
	0x2a, 0x2e, 0x67, 0x6f, 0x2e, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x62, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x45,
	0x73, 0x4f, 0x6e, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x00, 0x12, 0x6e, 0x0a,
	0x0a, 0x54, 0x61, 0x73, 0x6b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x32, 0x2e, 0x67, 0x6f,
	0x2e, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x62,
	0x61, 0x63, 0x6b, 0x75, 0x70, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x45, 0x73, 0x42, 0x61, 0x6b,
	0x54, 0x61, 0x73, 0x6b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a,
	0x2a, 0x2e, 0x67, 0x6f, 0x2e, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x62, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x45,
	0x73, 0x4f, 0x6e, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x00, 0x12, 0x6e, 0x0a,
	0x0b, 0x47, 0x65, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x2d, 0x2e, 0x67,
	0x6f, 0x2e, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x62, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x45, 0x73, 0x54, 0x61,
	0x73, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x2e, 0x2e, 0x67, 0x6f,
	0x2e, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x62,
	0x61, 0x63, 0x6b, 0x75, 0x70, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x45, 0x73, 0x54, 0x61, 0x73,
	0x6b, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x75, 0x74, 0x50, 0x75, 0x74, 0x22, 0x00, 0x12, 0x70, 0x0a,
	0x0d, 0x47, 0x65, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x2b,
	0x2e, 0x67, 0x6f, 0x2e, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x62, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x45, 0x73,
	0x54, 0x61, 0x73, 0x6b, 0x49, 0x44, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x30, 0x2e, 0x67, 0x6f,
	0x2e, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x62,
	0x61, 0x63, 0x6b, 0x75, 0x70, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x45, 0x73, 0x54, 0x61, 0x73,
	0x6b, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x4f, 0x75, 0x74, 0x50, 0x75, 0x74, 0x22, 0x00, 0x42,
	0x0a, 0x5a, 0x08, 0x2e, 0x2f, 0x3b, 0x45, 0x73, 0x42, 0x61, 0x6b, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_proto_backupAgent_esbak_estask_proto_rawDescOnce sync.Once
	file_proto_backupAgent_esbak_estask_proto_rawDescData = file_proto_backupAgent_esbak_estask_proto_rawDesc
)

func file_proto_backupAgent_esbak_estask_proto_rawDescGZIP() []byte {
	file_proto_backupAgent_esbak_estask_proto_rawDescOnce.Do(func() {
		file_proto_backupAgent_esbak_estask_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_backupAgent_esbak_estask_proto_rawDescData)
	})
	return file_proto_backupAgent_esbak_estask_proto_rawDescData
}

var file_proto_backupAgent_esbak_estask_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_proto_backupAgent_esbak_estask_proto_goTypes = []interface{}{
	(*EsBakTaskADDInput)(nil),    // 0: go.micro.service.backupAgent.EsBakTaskADDInput
	(*EsBakTaskUpdateInput)(nil), // 1: go.micro.service.backupAgent.EsBakTaskUpdateInput
	(*EsTaskIDInput)(nil),        // 2: go.micro.service.backupAgent.EsTaskIDInput
	(*EsOneMessage)(nil),         // 3: go.micro.service.backupAgent.EsOneMessage
	(*EsTaskListInput)(nil),      // 4: go.micro.service.backupAgent.EsTaskListInput
	(*EsTaskListOutPut)(nil),     // 5: go.micro.service.backupAgent.EsTaskListOutPut
	(*EsTaskListOutPutItem)(nil), // 6: go.micro.service.backupAgent.EsTaskListOutPutItem
	(*EsTaskDetailOutPut)(nil),   // 7: go.micro.service.backupAgent.EsTaskDetailOutPut
	(*EsTaskInfo)(nil),           // 8: go.micro.service.backupAgent.EsTaskInfo
}
var file_proto_backupAgent_esbak_estask_proto_depIdxs = []int32{
	6, // 0: go.micro.service.backupAgent.EsTaskListOutPut.esTaskListOutPutItem:type_name -> go.micro.service.backupAgent.EsTaskListOutPutItem
	8, // 1: go.micro.service.backupAgent.EsTaskDetailOutPut.esTaskInfo:type_name -> go.micro.service.backupAgent.EsTaskInfo
	0, // 2: go.micro.service.backupAgent.EsService.TaskAdd:input_type -> go.micro.service.backupAgent.EsBakTaskADDInput
	2, // 3: go.micro.service.backupAgent.EsService.TaskDelete:input_type -> go.micro.service.backupAgent.EsTaskIDInput
	1, // 4: go.micro.service.backupAgent.EsService.TaskUpdate:input_type -> go.micro.service.backupAgent.EsBakTaskUpdateInput
	4, // 5: go.micro.service.backupAgent.EsService.GetTaskList:input_type -> go.micro.service.backupAgent.EsTaskListInput
	2, // 6: go.micro.service.backupAgent.EsService.GetTaskDetail:input_type -> go.micro.service.backupAgent.EsTaskIDInput
	3, // 7: go.micro.service.backupAgent.EsService.TaskAdd:output_type -> go.micro.service.backupAgent.EsOneMessage
	3, // 8: go.micro.service.backupAgent.EsService.TaskDelete:output_type -> go.micro.service.backupAgent.EsOneMessage
	3, // 9: go.micro.service.backupAgent.EsService.TaskUpdate:output_type -> go.micro.service.backupAgent.EsOneMessage
	5, // 10: go.micro.service.backupAgent.EsService.GetTaskList:output_type -> go.micro.service.backupAgent.EsTaskListOutPut
	7, // 11: go.micro.service.backupAgent.EsService.GetTaskDetail:output_type -> go.micro.service.backupAgent.EsTaskDetailOutPut
	7, // [7:12] is the sub-list for method output_type
	2, // [2:7] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_proto_backupAgent_esbak_estask_proto_init() }
func file_proto_backupAgent_esbak_estask_proto_init() {
	if File_proto_backupAgent_esbak_estask_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_backupAgent_esbak_estask_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EsBakTaskADDInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_backupAgent_esbak_estask_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EsBakTaskUpdateInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_backupAgent_esbak_estask_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EsTaskIDInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_backupAgent_esbak_estask_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EsOneMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_backupAgent_esbak_estask_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EsTaskListInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_backupAgent_esbak_estask_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EsTaskListOutPut); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_backupAgent_esbak_estask_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EsTaskListOutPutItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_backupAgent_esbak_estask_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EsTaskDetailOutPut); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_backupAgent_esbak_estask_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EsTaskInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_backupAgent_esbak_estask_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_backupAgent_esbak_estask_proto_goTypes,
		DependencyIndexes: file_proto_backupAgent_esbak_estask_proto_depIdxs,
		MessageInfos:      file_proto_backupAgent_esbak_estask_proto_msgTypes,
	}.Build()
	File_proto_backupAgent_esbak_estask_proto = out.File
	file_proto_backupAgent_esbak_estask_proto_rawDesc = nil
	file_proto_backupAgent_esbak_estask_proto_goTypes = nil
	file_proto_backupAgent_esbak_estask_proto_depIdxs = nil
}
